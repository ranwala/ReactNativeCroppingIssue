package io.scanbot.sdk.reactnative.components.common;

import android.content.Context;
import android.util.AttributeSet;
import android.view.Choreographer;
import android.view.View;
import android.widget.FrameLayout;

import com.facebook.react.ReactRootView;

public class ScanbotComponentRootView extends ReactRootView {

    public final Runnable measureAndLayout =
            new Runnable() {
                @Override
                public void run() {
                    measure(
                            MeasureSpec.makeMeasureSpec(getWidth(), MeasureSpec.EXACTLY),
                            MeasureSpec.makeMeasureSpec(getHeight(), MeasureSpec.EXACTLY));
                    layout(getLeft(), getTop(), getRight(), getBottom());
                }
            };

    public ScanbotComponentRootView(Context context) {
        super(context);
    }

    public ScanbotComponentRootView(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public ScanbotComponentRootView(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    @Override
    protected void onAttachedToWindow() {
        super.onAttachedToWindow();
        applyChildrenMeasureWorkaround();
    }

    private void applyChildrenMeasureWorkaround() {
        Choreographer.getInstance().postFrameCallback(new Choreographer.FrameCallback() {
            @Override
            public void doFrame(long frameTimeNanos) {
                for (int i = 0; i < getChildCount(); i++) {
                    View child = getChildAt(i);
                    if (child instanceof FrameLayout) {
                        child.measure(View.MeasureSpec.makeMeasureSpec(getMeasuredWidth(), View.MeasureSpec.EXACTLY),
                                View.MeasureSpec.makeMeasureSpec(getMeasuredHeight(), View.MeasureSpec.EXACTLY));
                        child.layout(0, 0, child.getMeasuredWidth(), child.getMeasuredHeight());
                    }
                }
                getViewTreeObserver().dispatchOnGlobalLayout();
            }
        });
    }

    @Override
    public void requestLayout() {
        super.requestLayout();
        post(measureAndLayout);
    }

    @Override
    public void onViewAdded(View child) {
        super.onViewAdded(child);
        child.bringToFront();
        child.setZ(2.0f);
    }
}