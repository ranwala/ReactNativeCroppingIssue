package io.scanbot.sdk.reactnative.components.barcodecameraview;

import android.graphics.Color;

import java.util.ArrayList;
import java.util.List;

import io.scanbot.sdk.barcode.entity.BarcodeDocumentFormat;
import io.scanbot.sdk.barcode.entity.BarcodeFormat;
import io.scanbot.sdk.barcode.entity.BarcodeScannerAdditionalConfig;
import io.scanbot.sdk.barcode.entity.EngineMode;
import io.scanbot.sdk.ui.camera.FinderAspectRatio;

@SuppressWarnings("unused")
public class ScanbotBarcodeCameraViewConfiguration {

    public List<BarcodeFormat> barcodeFormats = new ArrayList<>();
    public List<BarcodeDocumentFormat> acceptedDocumentFormats = new ArrayList<>();
    public EngineMode engineMode = EngineMode.NextGen;
    public BarcodeScannerAdditionalConfig additionalConfiguration;

    // Automatically mapped properties
    private boolean shouldUseFinderView = false;
    private int finderLineWidth = 1;
    private int finderLineColor = Color.WHITE;
    private int finderBackgroundColor = Color.BLACK;
    private int finderMinimumPadding = 32;
    private int finderVerticalOffset = 0;
    private float finderBackgroundOpacity = 0.66f;
    private float cameraZoomFactor = -1;
    private boolean flashEnabled = false;
    private FinderAspectRatio finderAspectRatio = new FinderAspectRatio(1, 1);

    public void setShouldUseFinderView(boolean shouldUseFinderView) {
        this.shouldUseFinderView = shouldUseFinderView;
    }

    public void setFinderLineWidth(int viewFinderLineWidth) {
        this.finderLineWidth = viewFinderLineWidth;
    }

    public void setFinderLineColor(@androidx.annotation.ColorInt int viewFinderLineColor) {
        this.finderLineColor = viewFinderLineColor;
    }

    public void setFinderBackgroundColor(@androidx.annotation.ColorInt int viewFinderBackgroundColor) {
        this.finderBackgroundColor = viewFinderBackgroundColor;
    }

    public void setFinderMinimumPadding(int finderMinimumPadding) {
        this.finderMinimumPadding = finderMinimumPadding;
    }

    public void setFinderVerticalOffset(int finderVerticalOffset) {
        this.finderVerticalOffset = finderVerticalOffset;
    }

    public void setFinderAspectRatio(FinderAspectRatio finderAspectRatio) {
        this.finderAspectRatio = finderAspectRatio;
    }

    public void setFinderBackgroundOpacity(float finderBackgroundOpacity) {
        this.finderBackgroundOpacity = finderBackgroundOpacity;
    }

    public void setCameraZoomFactor(float cameraZoomFactor) {
        this.cameraZoomFactor = cameraZoomFactor;
    }

    public void setFlashEnabled(boolean flashEnabled) {
        this.flashEnabled = flashEnabled;
    }

    public boolean shouldUseFinderView() {
        return shouldUseFinderView;
    }

    public int getFinderLineWidth() {
        return finderLineWidth;
    }

    public int getFinderLineColor() {
        return finderLineColor;
    }

    public int getFinderBackgroundColor() {
        return finderBackgroundColor;
    }

    public int getFinderMinimumPadding() {
        return finderMinimumPadding;
    }

    public int getFinderVerticalOffset() {
        return finderVerticalOffset;
    }

    public float getFinderBackgroundOpacity() {
        return finderBackgroundOpacity;
    }

    public float getCameraZoomFactor() {
        return cameraZoomFactor;
    }

    public boolean isFlashEnabled() {
        return flashEnabled;
    }

    public FinderAspectRatio getFinderAspectRatio() {
        return finderAspectRatio;
    }
}
